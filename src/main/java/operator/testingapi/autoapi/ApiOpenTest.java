package operator.testingapi.autoapi;


import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import operator.base.TestBase;
import operator.http.GetClient;

import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import java.io.IOException;

import static operator.basecom.JsonBase.GetJsonValue;
import static operator.config.TestParamsConfig.*;

/****
 * //实例化对象  对象没有实例化  是无法调用非静态方法的
 *   声名对象  GetClient getClient;
 *   实例化对象  getClient = new GetClient();
 */

public class ApiOpenTest extends TestBase {
    TestBase testBase;
    String host;
    String url;
    GetClient getClient;

    @BeforeClass
    public void setup()
    {
        testBase = new TestBase();
        host = prop.getProperty("URL1");
        url = host+"page="+page0+"&count="+count0+"&type="+types;
        System.out.println(url);
    }

    @Test
    public void apiOpenTest()
    {
        try {
            getClient = new GetClient();  //实例化对象  对象没有实例化  是无法调用非静态方法的
            getClient.get(url);
            JSONObject jsont= getClient.getjson(url);

            System.out.println("获取结果如下：");
            System.out.println(jsont.get("result"));
            System.out.println(jsont.get("code"));
            System.out.println(jsont.get("message"));
            System.out.println();

            /*
            JSONArray array =(JSONArray) jsont.get("result");
            for (int i = 0; i < array.size(); i++) {
                JSONObject a1=array.getJSONObject(i);
                System.out.println(a1.get("text"));
            }
            String text=(String) array.getJSONObject(0).get("text");
            System.out.println(text);
            */
            Assert.assertEquals("孩子厉害\uD83D\uDC4D",GetJsonValue(jsont,"result",0,"text"));
            Assert.assertEquals(200,jsont.get("code"));
            Assert.assertEquals("成功!",jsont.get("message"));

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
